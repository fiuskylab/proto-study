// Syntax version
syntax = "proto3";

// Package name
package userproto;

// Message can be interpreted as a struct
// An aggregate of fields with types
message UserRequest {
  // User identifier
  string uuid = 0;

  // Name field
  string name = 1;

  uint32 age = 2;
  // Age

  // User roles
  enum Role {
    COMMON = 0;
    AGENT  = 1;
    MOD    = 2;
    ADMIN  = 3;
  }

  // Role
  Role role = 3;

  // Email
  string email = 4;

  // Password
  string password = 5;
}

// The service will the struct that store all method of this proto
// This service is a simple one, but you can increase amount of methods and messages
// So, for example, if you create a service FindByID, you can create a message UserRequestID that will only have the field 'string uuid = 0;'
service CRUD {
  rpc CreateUser (UserRequest) returns (UserRequest) {}
}
